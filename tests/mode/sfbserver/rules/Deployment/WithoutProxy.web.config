<?xml version="1.0" encoding="utf-8" ?>
<!--
    Note: As an alternative to hand editing this file you can use the
    web admin tool to configure settings for your application. Use
    the Website->Asp.Net Configuration option in Visual Studio.
    A full list of settings and comments can be found in
    machine.config.comments usually located in
    \Windows\Microsoft.Net\Framework\v2.x\Config
-->
<configuration>
  <configSections>
    <sectionGroup name="Microsoft.Rtc.Internal.WebTicketService">
      <section name="WebTicketTimerConfig"
               type="Microsoft.Rtc.Internal.WebTicketService.WebTicketTimerConfig,Microsoft.Rtc.Internal.WebTicketService,Version=7.0.0.0,Culture=neutral,PublicKeyToken=31bf3856ad364e35"/>
    </sectionGroup>
    <sectionGroup name="Microsoft.Rtc.Internal.WebServicesAuthFramework">
      <section name="OCSAuthConfig" type="Microsoft.Rtc.Internal.WebServicesAuthFramework.OCSAuthConfig,Microsoft.Rtc.Server.WebInfrastructure, Version=7.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"/>
    </sectionGroup>
    <section name="system.identityModel" type="System.IdentityModel.Configuration.SystemIdentityModelSection, System.IdentityModel, Version=4.0.0.0, Culture=neutral, PublicKeyToken=B77A5C561934E089" />
    <section name="system.identityModel.services" type="System.IdentityModel.Services.Configuration.SystemIdentityModelServicesSection, System.IdentityModel.Services, Version=4.0.0.0, Culture=neutral, PublicKeyToken=B77A5C561934E089" />

  </configSections>

  <Microsoft.Rtc.Internal.WebServicesAuthFramework>
    <OCSAuthConfig  isInternal="true" proxyAffinity="Pool" allowCrossDomainRequests="true" useAadGraphForCrossDomainVerification="true" allowCrossForestWebProxy="true" disableWebHostOrPortChangeHandler="true">
      <proxyRouterOverride type="Microsoft.Rtc.Internal.WebProxy.WebTicketServiceProxyRouter,Microsoft.Rtc.Server.WebInfrastructure, Version=7.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"/>
    </OCSAuthConfig>
  </Microsoft.Rtc.Internal.WebServicesAuthFramework>

  <Microsoft.Rtc.Internal.WebTicketService>
    <!-- Specifies what time interval the expire and refresh is -->
    <WebTicketTimerConfig PublicExpireInterval="00:15:00" PublicRefreshInterval="00:10:00" PrivateExpireInterval="08:00:00" PrivateRefreshInterval="06:00:00" />
  </Microsoft.Rtc.Internal.WebTicketService>

  <appSettings>
    <!-- Set the value of WebTicketIssuerSubset to a comma separated list of pool FQDN names to limit which pools the edge servers
           use to select a pool to issue a web ticket. This setting has no affect on non-edge pools. -->
    <add key="WebTicketIssuerSubset" value="" />
  </appSettings>

  <system.serviceModel>
    <extensions>
      <!-- Custom Auth Bindings-->
      <bindingExtensions>
        <add name="OCSBasicHttpBinding"
             type="Microsoft.Rtc.Internal.WebServicesAuthFramework.OCSBasicHttpBindingCollectionElement,Microsoft.Rtc.Server.WebInfrastructure, Version=7.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" />
        <add name="OCSWsFedBearerTokenHttpBinding"
             type="Microsoft.Rtc.Internal.WebServicesAuthFramework.OCSWsFedBearerTokenHttpBindingCollectionElement,Microsoft.Rtc.Server.WebInfrastructure, Version=7.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" />
        <add name="OCSWSHttpBinding"
             type="Microsoft.Rtc.Internal.WebServicesAuthFramework.OCSWSHttpBindingCollectionElement,Microsoft.Rtc.Server.WebInfrastructure, Version=7.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" />
        <add name="OCSMachineCertWSHttpBinding"
             type="Microsoft.Rtc.Internal.WebServicesAuthFramework.OCSMachineCertWSHttpBindingCollectionElement,Microsoft.Rtc.Server.WebInfrastructure, Version=7.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" />
      </bindingExtensions>
      <behaviorExtensions>
        <add name="OCSServiceCredentials"
             type="Microsoft.Rtc.Internal.WebServicesAuthFramework.OCSServiceCredentialsElement, Microsoft.Rtc.Server.WebInfrastructure, Version=7.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" />
      </behaviorExtensions>
    </extensions>
    <serviceHostingEnvironment aspNetCompatibilityEnabled="true"  multipleSiteBindingsEnabled="true" />

    <services>
      <service behaviorConfiguration="Microsoft.Rtc.Internal.WebTicketServiceBehavior" name="Microsoft.Rtc.Internal.WebTicketService.WebTicketService">
        <!-- Endpoints are generated dynamically in custom service host factory-->
      </service>
    </services>

    <bindings>

      <!-- Primitive bindings with client transport security -->
      <OCSBasicHttpBinding>
        <binding name="basicHttpWin">
          <security mode="Transport">
            <transport
              clientCredentialType="Windows"
          />
          </security>
        </binding>
        <binding name="basicHttpNtlm">
          <security mode="Transport">
            <transport
              clientCredentialType="Ntlm"
          />
          </security>
        </binding>
        <binding name="basicHttpPin">
          <security mode="Transport">
            <transport
              clientCredentialType="Basic"
              />
          </security>
        </binding>
        <binding name="basicHttpOAuthToken">
          <security mode="Transport">
            <transport clientCredentialType="None" />
          </security>
        </binding>
        <binding name="basicHttpWsFedPassive">
          <security mode="Transport">
            <transport
              clientCredentialType="None"
            />
          </security>
        </binding>
        <binding name="basicHttpUserName">
          <security mode="TransportWithMessageCredential">
            <message
              clientCredentialType="UserName"
              />
          </security>
        </binding>
      </OCSBasicHttpBinding>
      <OCSWsFedBearerTokenHttpBinding>
        <binding name="WsFed_bearer">
          <security mode="TransportWithMessageCredential">
            <message
                algorithmSuite="TripleDes"
                issuedKeyType="BearerKey"
                issuedTokenType="urn:oasis:names:tc:SAML:1.0:assertion"
                negotiateServiceCredential="false">
            </message>
          </security>
        </binding>
      </OCSWsFedBearerTokenHttpBinding>
      <OCSWSHttpBinding>
        <binding name="wsHttpCert">
          <security mode="TransportWithMessageCredential">
            <message
              clientCredentialType="Certificate"
              establishSecurityContext="false"
              negotiateServiceCredential="false"
              />
          </security>
        </binding>
      </OCSWSHttpBinding>
      <OCSMachineCertWSHttpBinding>
        <binding name="wsHttpMachineCert">
          <security mode="TransportWithMessageCredential">
            <message
              clientCredentialType="Certificate"
              establishSecurityContext="false"
              negotiateServiceCredential="false"
            />
          </security>
        </binding>
      </OCSMachineCertWSHttpBinding>
    </bindings>

    <behaviors>
      <serviceBehaviors>
        <behavior name="Microsoft.Rtc.Internal.WebTicketServiceBehavior">
          <OCSServiceCredentials
              diagnoseWsFedConfig="false"
              dumpWsFedSamlData="false">
            <clientCertificate>
              <authentication
                certificateValidationMode="None"
              />
            </clientCertificate>
          </OCSServiceCredentials>
          <!-- To avoid disclosing metadata information, set the value below to false and remove the metadata endpoint above before deployment -->
          <serviceMetadata httpGetEnabled="false"/>
          <!-- To receive exception details in faults for debugging purposes, set the value below to true.  Set to false before deployment to avoid disclosing exception information -->
          <serviceDebug includeExceptionDetailInFaults="false"/>
        </behavior>
      </serviceBehaviors>
    </behaviors>

  </system.serviceModel>

  <system.webServer>
    <modules>
      <add name="OCSAuthHelperModule"/>
      <add name="OCSAuthModule" type="Microsoft.Rtc.Internal.WebServicesAuthFramework.OCSAuthModule, Microsoft.Rtc.Server.WebInfrastructure, Version=7.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"/>
      <add name="HandlerInit" type="Microsoft.Rtc.Internal.WebTicketService.HandlerInitializationModule, Microsoft.Rtc.Server.WebInfrastructure, Version=7.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"/>
      <add name="ProxyModule" type="Microsoft.Rtc.Internal.WebProxy.ProxyModule,Microsoft.Rtc.Server.WebInfrastructure, Version=7.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"/>
      <add name="OCSAdditionalCredentialsModule" type="Microsoft.Rtc.Internal.WebServicesKerberosAuth.OCSAdditionalCredentialsModule,Microsoft.Rtc.Server.WebInfrastructure,Version=7.0.0.0,Culture=neutral,PublicKeyToken=31bf3856ad364e35"/>
    </modules>
    <handlers>
      <add name="Issuer" path="Issuer" verb="GET"
           type="Microsoft.Rtc.Internal.WebTicketService.KeySharingHandler, Microsoft.Rtc.Server.WebInfrastructure, Version=7.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"
           resourceType="Unspecified" preCondition="integratedMode" />
      <!-- Never use any other action for OAuthTokenRequestHandler than POST. Allowing GET for example opens the service
             up to certain cross-site scripting attacks. See bug 3202320 for details. -->
      <add name="OAuthToken" path="oauthtoken" verb="POST"
           type="Microsoft.Rtc.Internal.WebTicketService.OAuthTokenRequestHandler, Microsoft.Rtc.Server.WebInfrastructure, Version=7.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"
           resourceType="Unspecified" preCondition="integratedMode" />
    </handlers>
    <httpProtocol>
      <customHeaders>
        <add name="X-Content-Type-Options" value="nosniff" />
      </customHeaders>
    </httpProtocol>
  </system.webServer>

  <system.web>
    <compilation debug="false" defaultLanguage="c#">
      <assemblies>
        <add assembly="Microsoft.Rtc.Server.WebInfrastructure, Version=7.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" />
      </assemblies>
    </compilation>
    <customErrors mode="RemoteOnly"/>
  </system.web>
  <system.net>
    <!--<defaultProxy>
      <proxy
        proxyaddress="https://externalproxy:8080"
        bypassonlocal="true" />
    </defaultProxy> -->
  </system.net>
  <system.identityModel>
    <identityConfiguration name="fedConfig">
      <issuerNameRegistry type="Microsoft.Rtc.Internal.WebServicesAuthFramework.OCSTrustedIssuerNameRegistry, Microsoft.Rtc.Server.WebInfrastructure, Version=7.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" />
      <certificateValidation certificateValidationMode="None" />
    </identityConfiguration>
  </system.identityModel>
  <system.identityModel.services>
    <federationConfiguration identityConfigurationName="fedConfig">
      <cookieHandler requireSsl="true" path="/" />
      <wsFederation issuer="https://localhost" realm="https://localhost" />
    </federationConfiguration>
  </system.identityModel.services>
</configuration>
