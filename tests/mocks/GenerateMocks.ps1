################################################################################
# MIT License
#
# Copyright (c) Microsoft Corporation. All rights reserved.
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
#
# Filename: GenerateMocks.ps1
# Description: <TODO>
# Owner: Mike McIntyre <mmcintyr@microsoft.com>
# Created On: 1/15/2020 11:34 AM
#
# Last Modified On: 1/15/2020 11:34 AM
#################################################################################
[cmdletbinding()]
param (
    [string] $ModuleName
)

Set-StrictMode -Version Latest

$functions = Get-Module -Name $ModuleName
$OutputFile = "{0}Mocks.ps1" -f $ModuleName

if(-not [string]::IsNullOrEmpty($functions))
{
    # Remove existing mock if it exists
    if (Test-Path -Path $OutputFile)
    {
        Remove-Item -Force -Path $OutputFile
    }

    "#"                                                           | Out-File -FilePath $OutputFile -Force
    "# This file is autogenerated. Please do not edit directly"   | Out-File -FilePath $OutputFile -Append
    "#"                                                           | Out-File -FilePath $OutputFile -Append
    "# Last generated by {0} on {1}" -f $env:USERNAME, (Get-Date) | Out-File -FilePath $OutputFile -Append
    "#"                                                           | Out-File -FilePath $OutputFile -Append
    ""                                                            | Out-File -FilePath $OutputFile -Append

    foreach($function in $functions.ExportedCommands.Keys | Sort-Object)
    {
        "function {0}" -f $function            | Out-File -FilePath $OutputFile -Append
        "{"                                    | Out-File -FilePath $OutputFile -Append
        "    # Mock stub for {0}" -f $function | Out-File -FilePath $OutputFile -Append
        "}"                                    | Out-File -FilePath $OutputFile -Append
        ""                                     | Out-File -FilePath $OutputFile -Append
    }
}

